---
version: '3.8'

services:
  netdata:
    image: netdata/netdata:${NETDATA_VERSION:-latest}
    container_name: netdata
    hostname: {{ inventory_hostname }}
    restart: unless-stopped
    cap_add:
      - SYS_PTRACE
      - SYS_ADMIN
    security_opt:
      - apparmor:unconfined
    volumes:
      - netdata-config:/etc/netdata
      - netdata-lib:/var/lib/netdata
      - netdata-cache:/var/cache/netdata
      - ./config/cgroups.conf:/etc/netdata/cgroups.conf:ro
      - ./config/go.d/containerd.conf:/etc/netdata/go.d/containerd.conf:ro
      - /etc/passwd:/host/etc/passwd:ro
      - /etc/group:/host/etc/group:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /etc/os-release:/host/etc/os-release:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /var/log:/host/var/log:ro
      - /run:/host/run:ro
      - /etc/localtime:/etc/localtime:ro
    environment:
      - DOCKER_HOST=unix:///var/run/docker.sock
{% if netdata_claim_token != "" %}
      - NETDATA_CLAIM_TOKEN={{ netdata_claim_token }}
      - NETDATA_CLAIM_URL={{ netdata_claim_url }}
      - NETDATA_CLAIM_ROOMS={{ netdata_claim_room }}
{% endif %}
    networks:
      - traefik_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.netdata.rule=Host(`netdata.{{ domain }}`)"
      - "traefik.http.routers.netdata.entrypoints=websecure"
      - "traefik.http.routers.netdata.tls.certresolver=letsencrypt"
      - "traefik.http.services.netdata.loadbalancer.server.port={{ netdata_web_port }}"

volumes:
  netdata-config:
  netdata-lib:
  netdata-cache:

networks:
  traefik_network:
    external: true
    name: traefik-public 