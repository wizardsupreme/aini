---
- name: Create www-data user
  user:
    name: www-data
    uid: 33
    group: www-data
    system: yes
    shell: /usr/sbin/nologin
    home: /var/www
  become: true

- name: Create www-data group
  group:
    name: www-data
    gid: 33
    system: yes
  become: true

- name: Add root to www-data group
  user:
    name: root
    groups: www-data
    append: yes
  become: true

- name: Create Nextcloud config directories
  file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - /opt/nextcloud
    - /opt/nextcloud/config
    - /opt/nextcloud/php
    - /opt/nextcloud/data
  become: true

- name: Create Nextcloud data directory with proper permissions
  file:
    path: /opt/nextcloud/data
    state: directory
    mode: '0750'
    owner: www-data
    group: www-data
  become: true

# - name: Create .ncdata file
#   copy:
#     content: "# Nextcloud data directory"
#     dest: "{{ storage_box_mount.path }}/nextcloud/.ncdata"
#     mode: '0640'  # More restrictive but still allows www-data to read
#     owner: www-data 
#     group: www-data
#   become: true

- name: Template configurations
  template:
    src: "{{ item.src }}"
    dest: "/opt/nextcloud/{{ item.dest }}"
    mode: '0644'
  loop:
    - { src: docker-compose.yml.j2, dest: docker-compose.yml }
    - { src: config.php.j2, dest: config/config.php }
    - { src: reverse-proxy.config.php.j2, dest: config/reverse-proxy.config.php }
    - { src: external_storage.config.php.j2, dest: config/external_storage.config.php }

- name: Start Nextcloud
  community.docker.docker_compose_v2:
    project_src: /opt/nextcloud
    state: present
    pull: "missing"
    remove_orphans: true
    recreate: auto

- name: Wait for Nextcloud to be ready
  uri:
    url: "https://nextcloud.{{ domain }}"
    validate_certs: yes
    status_code: 200
    return_content: yes
  register: result
  until: result.status == 200
  retries: 60
  delay: 5
  ignore_errors: yes

- name: Debug Nextcloud response
  debug:
    var: result
  when: result.failed

- name: Enable required apps
  command: docker exec -u www-data nextcloud php occ app:enable {{ item }}
  loop: "{{ nextcloud_enable_apps }}"
  changed_when: false
  ignore_errors: yes
  register: app_enable_results

- name: Display app enable errors
  debug:
    msg: "Failed to enable app {{ item.item }}: {{ item.stdout }}"
  loop: "{{ app_enable_results.results }}"
  when: item.failed

- name: Update MIME types
  command: "{{ item }}"
  loop:
    - docker exec -u www-data nextcloud php occ maintenance:mimetype:update-js
    - docker exec -u www-data nextcloud php occ maintenance:mimetype:update-db
  changed_when: false
  ignore_errors: yes

- name: Check custom app installation status
  command: docker exec -u www-data nextcloud php occ app:list --output=json
  register: app_list
  changed_when: false

- name: Parse installed apps
  set_fact:
    installed_apps: "{{ (app_list.stdout | from_json).enabled }}"

- name: Install custom apps
  command: docker exec -u www-data nextcloud {{ item.1 }}
  loop: "{{ nextcloud_custom_install_apps|subelements('install_commands', skip_missing=True) }}"
  when:
    - item.1 is search('app:install')
    - (item.1 | regex_search('app:install ([^ ]+)', '\\1'))[0] not in installed_apps
  changed_when: false
  ignore_errors: yes

- name: Restart Nextcloud container
  community.docker.docker_compose_v2:
    project_src: /opt/nextcloud
    services: 
      - nextcloud
    state: present
    recreate: always

- name: Create PHP config directories
  file:
    path: "{{ item }}"
    state: directory
    mode: '0777'  # Temporarily permissive for container setup
    owner: root
    group: root
  loop:
    - /opt/nextcloud
    - /opt/nextcloud/config
    - /opt/nextcloud/php
  become: true
