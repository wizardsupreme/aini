# tasks/main.yml
---
- name: Verify required variables are defined
  assert:
    that: 
      - hetzner_token is defined and hetzner_token | length > 0
    fail_msg: "Required variable 'hetzner_token' is not defined or empty"

- name: Create or manage server
  hcloud_server:
    api_token: "{{ hetzner_token }}"
    name: "{{ hetzner_project_name }}-app"
    server_type: "{{ hetzner_server_type }}"
    image: "{{ hetzner_server_image }}"
    location: "{{ hetzner_server_location }}"
    ssh_keys:
      - "{{ hetzner_ssh_key_name }}"
    state: "{{ state }}"
    enable_ipv4: "{{ hetzner_enable_ipv4 }}"
    enable_ipv6: "{{ hetzner_enable_ipv6 }}"
  register: server
  async: 300
  poll: 0

- name: Wait for server creation
  async_status:
    jid: "{{ server.ansible_job_id }}"
  register: job_result
  until: job_result.finished
  retries: 5
  delay: 10
  when: server.ansible_job_id is defined

- name: Set DNS record configuration
  set_fact:
    dns_records:
      - name: "{% if hetzner_use_root_domain %}@{% else %}{{ hetzner_dns_name }}{% endif %}"
        type: "A"
        value: "{{ job_result.hcloud_server.ipv4_address }}"
        ttl: 300
      - name: "{% if hetzner_use_root_domain %}*{% else %}*.{{ hetzner_dns_name }}{% endif %}"
        type: "A"
        value: "{{ job_result.hcloud_server.ipv4_address }}"
        ttl: 300
  when: 
    - state == "present"
    - hetzner_dns_zone is defined
    - server is defined

- name: Configure DNS records
  include_role:
    name: infrastructure/dns
  vars:
    ipv4_address: "{{ job_result.hcloud_server.ipv4_address }}"
  when: 
    - state == "present"
    - hetzner_dns_zone is defined
    - server is defined

- name: Manage inventory
  include_tasks: 
    file: inventory.yml
    apply:
      vars:
        ipv4_address: "{{ job_result.hcloud_server.ipv4_address }}"
        server_name: "{{ hetzner_project_name }}-app"
  when: server is defined

- name: Configure mounts
  include_tasks: mounts.yml
  when: state == "present"
