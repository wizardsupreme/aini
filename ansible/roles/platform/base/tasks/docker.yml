---

- name: Install Python Docker SDK
  apt:
    name: 
      - python3-docker
      - docker-compose-plugin  # Docker Compose V2
    state: present
  become: true

- name: Verify Docker SDK installation
  command: python3 -c "import docker"
  changed_when: false

- name: Install required packages for Docker
  apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - python3-docker
      - docker-compose-plugin
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
    state: present

- name: Add Docker GPG key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Add Docker repository
  apt_repository:
    repo: "deb [arch=arm64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
    state: present

- name: Start and enable Docker service
  systemd:
    name: docker
    state: started
    enabled: yes

- name: Configure Docker daemon
  copy:
    content: |
      {
        "experimental": true
      }
    dest: /etc/docker/daemon.json
    mode: '0644'
  notify: Restart Docker

- name: Add ansible user to docker group
  user:
    name: "{{ ansible_user }}"
    groups: docker
    append: yes

- name: Remove old docker-compose
  apt:
    name: docker-compose
    state: absent

- name: Configure Docker daemon
  copy:
    content: |
      {
        "experimental": true
      }
    dest: /etc/docker/daemon.json
    mode: '0644'
  notify: Restart Docker

- name: Start and enable Docker service
  systemd:
    name: docker
    state: started
    enabled: yes

- name: Add ansible user to docker group
  user:
    name: "{{ ansible_user }}"
    groups: docker
    append: yes

- name: Verify Docker Compose installation
  command: docker compose version
  changed_when: false

- name: Force remove any stuck containers
  shell: docker rm -f $(docker ps -aq) || true
  changed_when: false 